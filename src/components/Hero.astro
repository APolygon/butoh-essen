---
export interface Props {
  title: string;
  subtitle?: string;
  imageSrc?: string;
  imageAlt?: string;
}

const { 
  title, 
  subtitle, 
  imageSrc, 
  imageAlt = "Hero Image" 
} = Astro.props;

// Build responsive sources; use Netlify Image CDN in production
const normalizedSrc = imageSrc ? (imageSrc.startsWith('/') ? imageSrc : `/${imageSrc}`) : undefined;
const responsiveWidths = [800, 1200, 1600, 1920];
const isProd = import.meta.env.PROD;
const toNetlify = (url: string, w: number, format?: string) => `/.netlify/images?url=${encodeURIComponent(url)}&w=${w}&fit=cover${format ? `&f=${format}` : ''}&q=70`;
const avifSrcset = normalizedSrc ? responsiveWidths.map(w => `${isProd ? toNetlify(normalizedSrc, w, 'avif') : normalizedSrc} ${w}w`).join(', ') : '';
const webpSrcset = normalizedSrc ? responsiveWidths.map(w => `${isProd ? toNetlify(normalizedSrc, w, 'webp') : normalizedSrc} ${w}w`).join(', ') : '';
const jpegSrcset = normalizedSrc ? responsiveWidths.map(w => `${isProd ? toNetlify(normalizedSrc, w, 'jpeg') : normalizedSrc} ${w}w`).join(', ') : '';
const fallbackSrc = normalizedSrc ? (isProd ? toNetlify(normalizedSrc, 1920, 'jpeg') : normalizedSrc) : undefined;
---

<div class="hero-container">
  {normalizedSrc ? (
    <picture>
      <source type="image/avif" srcset={avifSrcset} sizes="100vw" />
      <source type="image/webp" srcset={webpSrcset} sizes="100vw" />
      <img src={fallbackSrc} srcset={jpegSrcset} sizes="100vw" alt={imageAlt} class="hero-image" loading="eager" fetchpriority="high" decoding="sync" />
    </picture>
  ) : (
    <div class="hero-image">Hero Image</div>
  )}
  <div class="hero-overlay">
    <h1>{title}</h1>
    {subtitle && <p>{subtitle}</p>}
  </div>
</div>

<style>
  .hero-container {
    position: relative;
    width: 100vw;
    height: 60vh;
    margin-left: calc(-50vw + 50%);
    margin: 0 2rem;
    width: calc(100vw - 4rem);
  }
  .hero-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    background: none;
    border-radius: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    color: white;
    opacity: 1;
  }
  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    background: rgba(0, 0, 0, 0.4);
    color: white;
    padding: 2rem;
  }
  .hero-overlay h1 {
    font-size: 4.5rem;
    margin: 0 0 1rem 0;
    font-weight: 300;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
  }
  .hero-overlay p {
    font-size: 2.3rem;
    opacity: 0.9;
    margin: 0;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7);
  }
  @media (max-width: 768px) {
    .hero-overlay h1 {
      font-size: 2.5rem;
    }
    .hero-overlay p {
      font-size: 1.3rem;
    }
  }
</style> 